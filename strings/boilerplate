_css=<<__css__
<!--
p.journal
{
    margin-bottom:4px;
    margin-top:4px;
    text-indent:0em;
    line-height: 1.2em;
}
h3.journal
{
    font-family:sans-serif;
    line-height:1;
}
h4.journal
{
    font-family:sans-serif;
    line-height:1;
}
h5.journal
{
    font-family:sans-serif;
    line-height:1;
}
-->
__css__

header_html=<<__html__
<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="http://www.w3.org/Math/XSL/mathml.xsl"?>
<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD>
<TITLE>$title</TITLE>
<META HTTP-EQUIV="Pragma" CONTENT="no-cache"/>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<style type="text/css">$_css</style>
<script src="$spotter_js_dir/mathjax_startup.js"></script>
<!-- ========================================================================= -->
<!-- The following long block of js code used to be loaded in from the external file
     mathjax_config.js, through mathjax_startup.js, which only loaded it dynamically
     if it detected that we weren't on a mobile device. However, at some point around
     2016 I noticed that this started not working. It seems like mathjax is not able
     to find and execute this document element if it's dynamically created.
 -->
<!-- ========================================================================= -->
<script type="text/x-mathjax-config">
var mathjax_config_debugging_messages = true;
function mathjax_config_debug(message) {
  if (mathjax_config_debugging_messages) {
    console.log("informational message from mathjax_config.js: "+message);
  }
}
mathjax_config_debug("mathjax_config is being executed.");
MathJax.Hub.Register.StartupHook("AsciiMath Jax Config",function () {
  mathjax_config_debug("StartupHook is being executed.");
  var AM = MathJax.InputJax.AsciiMath.AM;
  var sym = AM.symbols;
   // Treat the following as functions, i.e., don't italicize them.
  var functions_to_add = ["asin","acos","atan","asinh","acosh","atanh"];
  function add_function(name) {
    sym.push(
      {input:name,  tag:"mo", output:name, tex:null, ttype:AM.TOKEN.UNARY, func:true}
    );
  }
  for (var i=0; i < functions_to_add.length; i++) {
    add_function(functions_to_add[i]);
  }
  // Don't treat the following as symbols.
  var functions_to_delete = ["Lim","det","dim","mod","gcd","lcm","lub","glb","min","max",
                             "hat","bar","vec","ul"];
  function delete_function(name) {
    for (var i=0; i < sym.length; i++) {
      if (name===sym[i].input) { sym.splice(i,1); break; }
    }
  }
  for (var i=0; i < functions_to_delete.length; i++) {
    delete_function(functions_to_delete[i]);
  }
});
</script>
<!-- ========================================================================= -->

</HEAD>
<body  bgcolor="white">
__html__

default_banner_html=<<__html__
    <table><tr><td><img src="http://www.lightandmatter.com/spotter/spotterlogo.jpg" width="123" height="184"></td><td>
    <h1>Spotter</h1>
    <p>A numerical and symbolic answer<br/>
       checker for math and science students.</p>
    <p><a href="http://www.lightandmatter.com/spotter/spotter.html">About Spotter</a>.<p/>

    </td></tr></table>
__html__

footer_html=<<__html__
$footer_file
</body></html>
__html__
