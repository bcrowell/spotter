_css=<<__css__
<!--
p.journal
{
    margin-bottom:4px;
    margin-top:4px;
    text-indent:0em;
    line-height: 1.2em;
}
h3.journal
{
    font-family:sans-serif;
    line-height:1;
}
h4.journal
{
    font-family:sans-serif;
    line-height:1;
}
h5.journal
{
    font-family:sans-serif;
    line-height:1;
}
-->
__css__

header_html=<<__html__
<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="http://www.w3.org/Math/XSL/mathml.xsl"?>
<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD>
<TITLE>$title</TITLE>
<META HTTP-EQUIV="Pragma" CONTENT="no-cache"/>
<! -- stuff for MathJax and ASCIIMath: -->

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <script type="text/x-mathjax-config">
      MathJax.Hub.Register.StartupHook("AsciiMath Jax Config",function () {
        var AM = MathJax.InputJax.AsciiMath.AM;
        var sym = AM.symbols;

        // Treat the following as functions, i.e., don't italicize them.
        var functions_to_add = ["asin","acos","atan","asinh","acosh","atanh"];
        function add_function(name) {
          sym.push(
            {input:name,  tag:"mo", output:name, tex:null, ttype:AM.TOKEN.UNARY, func:true}
          );
        }
        for (var i=0; i < functions_to_add.length; i++) {
          add_function(functions_to_add[i]);
        }

        // Don't treat the following as symbols.
        var functions_to_delete = ["Lim","det","dim","mod","gcd","lcm","lub","glb","min","max",
                                   "hat","bar","vec","ul"];
        function delete_function(name) {
          for (var i=0; i < sym.length; i++) {
            if (name===sym[i].input) { sym.splice(i,1); break; }
          }
        }
        for (var i=0; i < functions_to_delete.length; i++) {
          delete_function(functions_to_delete[i]);
        }
      });
    </script>
    <script>
      function load_external_js(url) {
        // http://stackoverflow.com/a/15521523/1142217
        var head = document.getElementsByTagName('head')[0];
        var js = document.createElement("script");
        js.type = "text/javascript";
        js.src = url;
        head.appendChild(js);
      }
      // values >=1 mean disabled
      var MATHJAX_ENABLED = 0;
      var MATHJAX_DISABLED_MOBILE = 1; // mathjax doesn't have acceptable performance on mobile devices
      var MATHJAX_DISABLED_BY_HAND = 2; // not implemented yet
      function mathjax_disabled() {
        var is_mobile =  (screen.width<480);
        if (is_mobile) {return MATHJAX_DISABLED_MOBILE;} else {return MATHJAX_ENABLED;}
      }
      if (mathjax_disabled()<=0) {
        load_external_js("https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=AM_HTMLorMML.js");
      }
      function explain_mathjax() {
        var d = mathjax_disabled();
        var expl = document.getElementById("explain_mathml");
        if (d==MATHJAX_ENABLED) {
          expl.innerHTML = "As you type, Spotter's interpretation of your input will show up here: <span id=\"out\">``</span> <br/>";
        }
        if (d==MATHJAX_DISABLED_MOBILE) {
          expl.innerHTML = "Your answer is not being rendered into human math notation as you type it in, because you appear to be on a mobile device.";
        }
        if (d==MATHJAX_DISABLED_BY_HAND) {
          expl.innerHTML = "Your answer is not being rendered into human math notation as you type it in, because you have disabled that feature.";
        }
      }
      function my_onload_stuff() {
        explain_mathjax();
        if (mathjax_disabled()<=0) {
          do_render_math(); // render the first time even if there's no keystroke, e.g, if the page was reloaded
                            // ...doesn't work reliably?
        }
      }
    </script>
  
<style type="text/css">$_css</style>
</HEAD>
<body  bgcolor="white" onload="my_onload_stuff();">
__html__

default_banner_html=<<__html__
    <table><tr><td><img src="http://www.lightandmatter.com/spotter/spotterlogo.jpg" width="123" height="184"></td><td>
    <h1>Spotter</h1>
    <p>A numerical and symbolic answer<br/>
       checker for math and science students.</p>
    <p><a href="http://www.lightandmatter.com/spotter/spotter.html">About Spotter</a>.<p/>

    </td></tr></table>
__html__

footer_html=<<__html__
$footer_file
</body></html>
__html__

asciimath_js_code=<<__js__
//--------------- begin javascript code -------------------
//script to render Spotter input using ASCIIMath and MathJax

  function render_math(inputId,outputId,variables) {
    var str = document.getElementById(inputId).value;
    var math = MathJax.Hub.getAllJax(outputId)[0]; // http://docs.mathjax.org/en/latest/typeset.html
    for (var i=0; i<variables.length; i++) {
      var u = variables[i];
      var v = format_variable_name(u);
      if (u!=v) str = str.replace(new RegExp(u,"g"),v);
    }
    MathJax.Hub.Queue(["Text",math,str]);
  }

  // examples: alpha1 -> alpha_(1) , mus -> mu_(s) , Ftotal -> F_(total)
  // problems: operators like eq will get treated as variables, rendered as e_(q)
  // Escaped dollar signs in the following for use with Tint.
  function format_variable_name(x) {
    var greek =  "alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|"
                +"Alpha|Beta|Gamma|Delta|Epsilon|Zeta|Eta|Theta|Iota|Kappa|Lambda|Mu|Nu|Xi|Omicron|Pi|Rho|Sigma|Tau|Upsilon|Phi|Chi|Psi|Omega";

    // just a Greek character and nothing else:
    var r = new RegExp("^("+greek+")$");
    if (r.test(x)) { return x; }

    // a Greek character followed by something, e.g., mu0:
    var r = new RegExp("^("+greek+")(.+)");
    if (r.test(x)) { return x.replace(r,"\$1_(\$2)");}

    // a multi-letter variable name, e.g., Ftotal:
    r = /^(.)(.+)$/;
    if (r.test(x)) { return x.replace(r,"\$1_(\$2)");}

    return x;
  }

//--------------- end javascript code -------------------
__js__
